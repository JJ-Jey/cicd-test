# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# 변수 만들기: 지금은 굳이 필요없음
env:
  S3_LOCATION_BUCKET: ${{ secrets.S3_BUCKET }}

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    # name 은 주석 느낌으로, 별로 중요하지 않음: 아래의 name 도 마찬가지
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2 # v2.6.0
      with:
        arguments: build
    # AWS에 외부 접속하기 위한 IAM user 등록
    - name: Configure AWS 
      uses: aws-actions/configure-aws-credentials@v1-node16
      with: 
        # 오른쪽 값은 Settings 의 secret repository에 있는 값을 가져오는 것
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    # 빌드 결과물을 S3 버킷에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ secrets.CODEDEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$secrets.S3_BUCKET/$GITHUB_SHA.zip \
          --source .
    # S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ secrets.CODEDEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ secrets.CODEDEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_LOCATION_BUCKET,key=$GITHUB_SHA.zip,bundleType=zip
